#!/usr/bin/python3
import smtplib, sys, configparser, os, datetime, getpass, subprocess
from optparse import OptionParser
import base64

def clamdscan(f):
    cmd = "cat '{}'| clamdscan -".format(f)
    ps = subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE,stderr=subprocess.STDOUT)
    for line in  b2s(ps.communicate()[0]).split("\n"):
        if line.find("stream: OK")==-1:
            return line.replace("stream", f )
    return ""


def b2s(b, code='UTF-8'):
    return bytes(b).decode(code)

def s2b(s, code='UTF-8'):
    if s==None:
        return "".encode(code)
    else:
        return s.encode(code)


inicio=datetime.datetime.now()

#Parse options
parser = OptionParser(version="0.5",  description="Antivirus scans whole system and sends an email")
parser.add_option("-p","--progress", action="store_true", default=False, dest="progress", help="Show progress")
parser.add_option("-d","--dir", action="store", dest="dir", default=os.getcwd(), help="Directory to scan")
(options, args) = parser.parse_args()

name=os.popen("hostname").read()
f=os.popen("hostname -d")
name=name[:-1]+"."+f.read()[:-1]
f.close()

allfiles=[]
report=""
for root, dirs, files in os.walk(options.dir):
    for nam in files:
        allfiles.append(os.path.join(root,nam))

inicioav=datetime.datetime.now()

found=0
for i, file in enumerate(allfiles):
    if options.progress:
        if i!=0:
            stri="Files {} of {}. Found {}. ETA: {}".format(i+1, len(allfiles), found, (len(allfiles)-i)*(datetime.datetime.now()-inicioav)/i) 
        else:
            stri="Files {} of {}. Found {}.".format(i+1, len(allfiles), found) 
        sys.stdout.write("\b"*(len(stri)+11)+stri)
        sys.stdout.flush()
    output=clamdscan(file)
    if output!="":
        found=found+1
        report=report +output

if options.progress:
    print()
    print()
output="""Searching virus in {}
Found {} from {} files in {} directory:
{}
-------------------------------
Process took: {}
""".format(name, found, len(allfiles),options.dir,report,datetime.datetime.now()-inicio)

print(output)
